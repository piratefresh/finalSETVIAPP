module.exports=function(t){var e={};function r(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:s})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e){t.exports=require("parse-link-header")},function(t,e,r){"use strict";r.r(e);var s=r(0),i=r.n(s);const a=t=>t,f=t=>t.reduce((t,e)=>[...t,...e],[]),n=t=>t.ok&&204!==t.status?t.json():t.text(),o=({url:t,res:e,pageItems:r,firstPage:s,firstOffset:a,page:f,limit:n,offset:o,params:u,isFirst:l})=>{const p=(({params:t,pageItems:e,url:r,firstPage:s,firstOffset:i,page:a,limit:f,offset:n,isFirst:o})=>{if(!t)return;const u=new URL(r);if(o||e&&e.length){if(t.offset||t.limit){const r=f||e&&e.length,s=o?n:n+r,a=(!0===t.limit?void 0:t.limit)||"limit",l=(!0===t.offset?void 0:t.offset)||"offset";return s!==i&&u.searchParams.set(l,s),r&&u.searchParams.set(a,r),{url:u.toString(),limit:r,offset:s}}{const e=o?a:a+1;return e!==s&&u.searchParams.set(t.page||"page",e),{url:u.toString(),page:e}}}})({url:t,pageItems:r,page:f,firstPage:s,firstOffset:a,limit:n,offset:o,params:u,isFirst:l});if(p)return p;const c=(({res:t,url:e,isFirst:r})=>{if(r)return{url:e};if(!t||!t.headers)return;const s=t.headers.get("link")||t.headers.get("Link");if(!s)return;const{next:a}=i()(s)||{};return a?{url:a.url}:void 0})({res:e,url:t,isFirst:l});return c||void 0};e.default=(async(t,e={})=>{const{params:r,items:s=a,merge:i=f,parse:u=n,next:l=o,until:p,firstOffset:c=0,firstPage:g=1,options:m}=e;let d,h,x,{limit:P,offset:b=c,page:k=g}=e,v=[],w=0,O=t;for(;;){const e=await l({url:O,res:x,pageItems:d,firstPage:g,firstOffset:c,limit:P,offset:b,page:k,params:r,isFirst:0===w});if(!e)break;O=e.url||t,P=e.limit||P,b=e.offset||b,k=e.page||k;try{x=await fetch(O,m),w++}catch(t){if(x&&404===x.status&&w>0)break;throw t}if(x&&404===x.status&&w>0)break;if(x&&x.status>=400)throw new Error(`failed page call ${w}, status ${x.status} ${x.statusText}`);if(!(h=await u(x)))break;if(v.push(h),d=s(h),p&&await p({page:h,pages:v}))break}return{data:w>1?i(v.map(t=>s(t))):h}})}]);